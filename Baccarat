let theDiscard = [];
let theShoe = [];
let totalHands = 0;
let playerWinningHands = 0;
let bankerWinningHands = 0;
let tieHands = 0;
let dragon7Hands = 0;
let panda8Hands = 0;
document.querySelector("#playerFirst .suit").innerHTML = "";
document.querySelector("#playerFirst .image").innerHTML = "";
document.querySelector("#playerSecond .suit").innerHTML = "";
document.querySelector("#playerSecond .image").innerHTML = "";
document.querySelector("#bankerFirst .suit").innerHTML = "";
document.querySelector("#bankerFirst .image").innerHTML = "";
document.querySelector("#bankerSecond .suit").innerHTML = "";
document.querySelector("#bankerSecond .image").innerHTML = "";
document.querySelector("#playerThird .suit").innerHTML = "";
document.querySelector("#playerThird .image").innerHTML = "";
document.querySelector("#bankerThird .suit").innerHTML = "";
document.querySelector("#bankerThird .image").innerHTML = "";

function createShoe() {
  // card();
  createTheShoe();
  shuffleTheCards(theShoe);
  // burnCards(theShoe, theDiscard);

  function card(name, suit, value, deck, image) {
    this.name = name;
    this.suit = suit;
    this.value = value > 10 ? 0 : value;
    this.deck = deck;
    this.image = image;
  }

  function createTheShoe() {
    this.names = [
      "Ace",
      "Two",
      "Three",
      "Four",
      "Five",
      "Six",
      "Seven",
      "Eight",
      "Nine",
      "Ten",
      "Jack",
      "Queen",
      "King"
    ];

    this.images = [
      "A",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "J",
      "Q",
      "K"
    ];

    //   this.images = {
    //     "Ace": "A",
    //     "Two":"2",
    //     "Three": "3",
    //     "Four": "4",
    //     "Five": "5",
    //     "Six": "6",
    //     "Seven":"7",
    //     "Eight":"8",
    //     "Nine":"9",
    //     "Ten":"10",
    //     "Jack":"J",
    //     "Queen":"Q",
    //     "King":"K"
    // };

    this.suits = ["Hearts", "Diamonds", "Spades", "Clubs"];
    this.decks = 8;
    // let cards = [];
    if (theShoe.length === 0) {
      for (let deck = 1; deck <= this.decks; deck++) {
        for (let suit = 0; suit < suits.length; suit++) {
          for (let name = 0; name < names.length; name++) {
            theShoe.push(
              new card(
                this.names[name],
                this.suits[suit],
                name + 1,
                deck,
                this.images[name]
              )
            );
          }
        }
      }
    }
    console.log("The shoe length is:", theShoe.length);
    console.log("The shoe BEFORE shuffling is:", theShoe);
    return theShoe;
  }

  function shuffleTheCards(theShoe) {
    console.log("shuffleTheCards fires");
    for (let i = 0; i < 500; i++) {
      console.log("shuffleTheCards for loop fires");
      let location1 = Math.floor(Math.random() * theShoe.length);
      let location2 = Math.floor(Math.random() * theShoe.length);
      let temp = theShoe[location1];
      theShoe[location1] = theShoe[location2];
      theShoe[(location2 = temp)];
    }
    console.log("theShoe AFTER shuffling=", theShoe);
    burnCards(theShoe, theDiscard);
  }

  function burnCards(theShoe, theDiscard) {
    console.log("burnCards fires");
    console.log("theDiscard=", theDiscard);
    // let numBurnCards = theShoe[0].value===0 ?10:theShoe[0].value;
    let numBurnCards = theShoe[0].value;
    console.log("The burn card is:", theShoe[0]);
    console.log("The number of burn cards is:", theShoe[0].value);
    theDiscard.push(theShoe.shift());
    console.log("numBurnCards=", numBurnCards);
    for (let i = 1; i <= numBurnCards; i++) {
      console.log("burnCards for loop fires");
      console.log("The number", i, "burned card was", theShoe[0]);
      theDiscard.push(theShoe.shift());
    }
    console.log("theShoe.length=", theShoe.length);
    console.log("theDiscard.length=", theDiscard.length);
    console.log("TheDiscard is:", theDiscard);
    console.log("-------------------------------------");
  }
}

//-----------------------------------------------------------------------------------

function dealAHand(theShoe, theDiscard, suit) {
  console.log("dealAHand fires");
  let playerTotal = null;
  let bankerTotal = null;
  let playerWins = false;
  let bankerWins = false;
  let resultIsATie = false;
  let playerTotalCards = 0;
  let bankerTotalCards = 0;
  let playerHand = [];
  let bankerHand = [];
  document.querySelector("#playerFirst .suit").innerHTML = "";
  document.querySelector("#playerFirst .image").innerHTML = "";
  document.querySelector("#playerSecond .suit").innerHTML = "";
  document.querySelector("#playerSecond .image").innerHTML = "";
  document.querySelector("#bankerFirst .suit").innerHTML = "";
  document.querySelector("#bankerFirst .image").innerHTML = "";
  document.querySelector("#bankerSecond .suit").innerHTML = "";
  document.querySelector("#bankerSecond .image").innerHTML = "";
  document.querySelector("#playerThird .suit").innerHTML = "";
  document.querySelector("#playerThird .image").innerHTML = "";
  document.querySelector("#bankerThird .suit").innerHTML = "";
  document.querySelector("#bankerThird .image").innerHTML = "";
 


  dealFirstFourCards(theShoe, theDiscard);

  function dealFirstFourCards(theShoe, theDiscard) {
    console.log("dealFirstFourCards fires");
    console.log("theShoe.length=", theShoe.length);
    console.log("theDiscard.length=", theDiscard.length);
    console.log("totalHands=", totalHands);

    playerHand.push(theShoe.shift());
    playerTotalCards++;

    bankerHand.push(theShoe.shift());
    bankerTotalCards++;

    playerHand.push(theShoe.shift());
    playerTotalCards++;
    console.log("playerTotalCards:", playerTotalCards);

    bankerHand.push(theShoe.shift());
    bankerTotalCards++;

    console.log("bankerTotalCards:", bankerTotalCards);
    console.log("playerHand:", playerHand);
    console.log("bankerHand:", bankerHand);
    showFirstFourCards(playerHand, bankerHand);
  }

  function suitChanger(suit) {
    if (suit === "Spades") {
      return "&spades;";
    } else if (suit === "Hearts") {
      return "&hearts;";
    } else if (suit === "Clubs") {
      return "&clubs;";
    } else if (suit === "Diamonds") {
      return "&diams;";
    }
  }

  function showFirstFourCards(playerHand, bankerHand) {
    console.log("showFirstFourCards fires");

    if (playerHand[0]) {
      document.querySelector("#playerFirst .suit").innerHTML = suitChanger(
        playerHand[0].suit
      );
      document.querySelector("#playerFirst .image").innerHTML =
        playerHand[0].image;
      document.querySelector("#playerFirst").classList.add(playerHand[0].suit);
    }
    if (playerHand[1]) {
      document.querySelector("#playerSecond .suit").innerHTML = suitChanger(
        playerHand[1].suit
      );
      document.querySelector("#playerSecond .image").innerHTML =
        playerHand[1].image;
      document.querySelector("#playerSecond").classList.add(playerHand[1].suit);
    }
    if (bankerHand[0]) {
      document.querySelector("#bankerFirst .suit").innerHTML = suitChanger(
        bankerHand[0].suit
      );
      document.querySelector("#bankerFirst .image").innerHTML =
        bankerHand[0].image;
      document.querySelector("#bankerFirst").classList.add(bankerHand[0].suit);
    }
    if (bankerHand[1]) {
      document.querySelector("#bankerSecond .suit").innerHTML = suitChanger(
        bankerHand[1].suit
      );
      document.querySelector("#bankerSecond .image").innerHTML =
        bankerHand[1].image;
      document.querySelector("#bankerSecond").classList.add(bankerHand[1].suit);
    }
    totalTheHands(theShoe, playerTotal, bankerTotal, playerHand, bankerHand);
  }

  function totalTheHands(
    theShoe,
    playerTotal,
    bankerTotal,
    playerHand,
    bankerHand
  ) {
    console.log("totalTheHands fires");
    console.log("theShoe.length:", theShoe.length);
    console.log("playerHand:", playerHand);
    console.log("bankerHand:", bankerHand);

    playerTotal = (playerHand[0].value + playerHand[1].value) % 10;

    console.log("The player's total is:", playerTotal);

    bankerTotal = (bankerHand[0].value + bankerHand[1].value) % 10;

    console.log("The banker's total is:", bankerTotal);

    compareHandsForNaturals(playerTotal, bankerTotal);
  }

  function compareHandsForNaturals(playerTotal, bankerTotal) {
    console.log("compareHandsForNaturals fires");
    if (
      playerTotal === 8 ||
      playerTotal === 9 ||
      bankerTotal === 8 ||
      bankerTotal === 9
    ) {
      console.log("natruals if loop fires - natural detected");
      compareHandsFinal(playerTotal, bankerTotal);
    } else {
      drawThirdCards(playerTotal, bankerTotal);
    }
  }

  function drawThirdCards(playerTotal, bankerTotal) {
    console.log("drawThirdCards fires");
    if (playerTotal <= 5) {
      playerHand.push(theShoe.shift());
      console.log("Player<=5 fires");
      console.log("The player's third card is:", playerHand[2]);
      console.log("The player has:", playerHand);
      playerTotalCards++;
    }
    if (bankerTotal === 0 || bankerTotal === 1 || bankerTotal === 2) {
      bankerHand.push(theShoe.shift());
      console.log("Banker 0 1 2 fires");
      console.log("The banker's third card is:", bankerHand[2]);
      console.log("The banker has:", bankerHand);
      bankerTotalCards++;
    } else if (bankerTotal === 3 && playerHand[2].value !== 8) {
      bankerHand.push(theShoe.shift());
      console.log("Banker 3 fires");
      console.log("The banker's third card is:", bankerHand[2]);
      console.log("The banker has:", bankerHand);
      bankerTotalCards++;
    } else if (
      bankerTotal === 4 &&
      [2, 3, 4, 5, 6, 7].includes(playerHand[2].value)
    ) {
      bankerHand.push(theShoe.shift());
      console.log("Banker 4 fires");
      console.log("The banker's third card is:", bankerHand[2]);
      console.log("The banker has:", bankerHand);
      bankerTotalCards++;
    } else if (
      (bankerTotal === 5 && playerHand[2].value === 4) ||
      5 ||
      6 ||
      7
    ) {
      bankerHand.push(theShoe.shift());
      console.log("Banker 5 fires");
      console.log("The banker's third card is:", bankerHand[2]);
      console.log("The banker has:", bankerHand);
      bankerTotalCards++;
    } else if ((bankerTotal === 6 && playerHand[2].value === 6) || 7) {
      bankerHand.push(theShoe.shift());
      console.log("Banker 6 fires");
      console.log("The banker's third card is:", bankerHand[2]);
      console.log("The banker has:", bankerHand);
      bankerTotalCards++;
    }
    console.log("theShoe.length:", theShoe.length);

    // playerTotal =
    //   (playerHand[0].value + playerHand[1].value + ((playerHand[2].value) || 0)) %
    //   10;

    playerTotal = playerHand[2]
      ? (playerHand[0].value + playerHand[1].value + playerHand[2].value) % 10
      : (playerHand[0].value + playerHand[1].value) % 10;
    console.log("The player's total is:", playerTotal);

    bankerTotal = bankerHand[2]
      ? (bankerHand[0].value + bankerHand[1].value + bankerHand[2].value) % 10
      : (bankerHand[0].value + bankerHand[1].value) % 10;
    // bankerTotal =
    //   (bankerHand[0].value + bankerHand[1].value + ((bankerHand[2].value) || 0)) %
    //   10;

    console.log("The banker's total is:", bankerTotal);

    showThirdCards(playerHand, bankerHand, playerTotal, bankerTotal);
  }

  function showThirdCards(playerHand, bankerHand, playerTotal, bankerTotal) {
    console.log("showThirdCards fires");
    if (playerHand[2]) {
      document.querySelector("#playerThird .suit").innerHTML = suitChanger(
        playerHand[2].suit
      );
      document.querySelector("#playerThird .image").innerHTML =
        playerHand[2].image;
        document.querySelector("#playerThird").classList.add(playerHand[2].suit);
    }
    if (bankerHand[2]) {
      document.querySelector("#bankerThird .suit").innerHTML = suitChanger(
        bankerHand[2].suit
      );
      document.querySelector("#bankerThird .image").innerHTML =
        bankerHand[2].image;
        document.querySelector("#bankerThird").classList.add(bankerHand[2].suit);
    }
    console.log("bankerTotal=", bankerTotal, "playerTotal=", playerTotal);
    compareHandsFinal(playerTotal, bankerTotal);
  }

  function compareHandsFinal(playerTotal, bankerTotal) {
    console.log("compareHandsFinal fires");
    console.log("The player's total is:", playerTotal);
    console.log("The banker's total is:", bankerTotal);
    if (playerTotal > bankerTotal) {
      playerWins = true;
      console.log(
        "The player wins with",
        playerTotal,
        "points against the banker's",
        bankerTotal
      );
    } else if (playerTotal < bankerTotal) {
      bankerWins = true;
      console.log(
        "The banker wins with",
        bankerTotal,
        "points against the player's",
        playerTotal
      );
    } else if (playerTotal === bankerTotal) {
      resultIsATie = true;
      console.log(
        "It is a tie.",
        bankerTotal,
        "points against the players's",
        playerTotal
      );
    }
    console.log("playerWins=", playerWins);
    console.log("bankerWins=", bankerWins);
    console.log("resultIsATie=", resultIsATie);
    bonusHands(
      bankerTotal,
      playerTotal,
      playerTotalCards,
      bankerTotalCards,
      playerWins,
      bankerWins,
      resultIsATie
    );
  }

  function bonusHands(
    bankerTotal,
    playerTotal,
    playerTotalCards,
    bankerTotalCards,
    playerWins,
    bankerWins,
    resultIsATie
  ) {
    console.log("bonusHands fires");
    if (resultIsATie === true) {
      console.log("TIE PAYS 8 TO 1");
      // tieHands++;
    } else if (
      bankerWins === true &&
      bankerTotalCards === 3 &&
      bankerTotal === 7
    ) {
      console.log("DRAGON 7 PAYS 40 TO 1!!!");
      dragon7Hands++;
    } else if (
      playerWins === true &&
      playerTotalCards === 3 &&
      playerTotal === 8
    ) {
      console.log("PANDA 8 PAYS 25 TO 1!!!");
      panda8Hands++;
    } else {
      console.log("No bonus hand ocurred");
    }
    countHandTotals(
      playerWins,
      bankerWins,
      resultIsATie,
      tieHands,
      dragon7Hands,
      panda8Hands
    );
  }

  function countHandTotals(
    playerWins,
    bankerWins,
    resultIsATie,
    tieHands,
    dragon7Hands,
    panda8Hands
  ) {
    console.log("countHandTotals fires");
    console.log("playerWins=", playerWins);
    console.log("bankerWins=", bankerWins);
    console.log("resultIsATie=", resultIsATie);
    if (playerWins === true) {
      playerWinningHands++;
    } else if (bankerWins === true) {
      bankerWinningHands++;
    } else if (resultIsATie === true) {
      tieHands++;
    } else {
      console.log("Error in countHandTotals");
    }
    totalHands++;
    console.log("totalHands=", totalHands);
    console.log("playerWinningHands=", playerWinningHands);
    console.log("bankerWinningHands=", bankerWinningHands);
    console.log("tieHands=", tieHands);
    console.log("dragon7Hands=", dragon7Hands);
    console.log("panda8Hands=", panda8Hands);
    discardCards(
      playerHand,
      bankerHand,
      theDiscard,
      playerWins,
      bankerWins,
      resultIsATie,
      tieHands,
      dragon7Hands,
      panda8Hands
    );
  }

  function discardCards(
    playerHand,
    bankerHand,
    theDiscard,
    playerWins,
    bankerWins,
    resultIsATie,
    tieHands,
    dragon7Hands,
    panda8Hands
  ) {
    for (let i = 0; i < playerHand.length; i++) {
      console.log("player discard loop fires");
      theDiscard.push(playerHand[i]);
    }
    playerHand = [];
    for (let j = 0; j < bankerHand.length; j++) {
      console.log("banker discard loop fires");
      // theDiscard.push(bankerHand[j].shift);
      theDiscard.push(bankerHand[j]);
    }
    bankerHand = [];
    console.log("theDiscard.length=", theDiscard.length);
    console.log("playerHand after discarding=", playerHand);
    console.log("bankerHand after discarding=", bankerHand);
    resetAll();
  }

  function resetAll() {
    console.log("resetAll fires");
    let playerTotal = null;
    let bankerTotal = null;
    let playerWins = false;
    let bankerWins = false;
    let resultIsATie = false;
    let playerTotalCards = 0; 
    let bankerTotalCards = 0;
    document.querySelector("#playerFirst").classList.remove(playerHand[0].suit);
    document.querySelector("#playerSecond").classList.remove(playerHand[1].suit);
    document.querySelector("#bankerFirst").classList.remove(bankerHand[0].suit);
    document.querySelector("#bankerSecond").classList.remove(bankerHand[1].suit);
    document.querySelector("#playerThird").classList.remove(playerHand[2].suit);
    document.querySelector("#bankerThird").classList.remove(bankerHand[2].suit);
    // let playerHand = [];
    // let bankerHand = [];


    seeIfThereAreEnoughCards(theShoe);
  }

  function seeIfThereAreEnoughCards(theShoe) {
    console.log("seeIfThereAreEnoughCards fires");
    console.log("theShoe.length:", theShoe.length);
    if (theShoe.length < 52) {
      console.log("The cut card is out. Must reshuffle");
      stop();
    }
    console.log("--------------------------------------------------");
  }

  function stop() {
    console.log("Game stopped");
    document.querySelector("#shuffleButton").innerHTML = "disabled";
  }
}
